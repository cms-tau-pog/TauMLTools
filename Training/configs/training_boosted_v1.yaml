Setup:
    n_tau                :  250 # number of candidates in one batch
    iso_cone             :  0.5
    n_inner_cells        :  11
    inner_cell_size      :  0.02
    n_outer_cells        :  21
    outer_cell_size      :  0.05
    n_threads            :  1
    debug                :  False
    use_weights          :  True

    # tau_types_names.keys are written in accordance with tauType in the tau tuple
    tau_types_names      : { "0":"e", "1":"mu", "2":"tau", "3":"jet" }
    DeepTauVSjet_cut     : -1.0 
    recompute_tautype    : True
    include_mismatched   : False # whether to keep tau candidates with tau_type not present in `tau_types_names`
    #input_dir            : "<path_to_shuffle_and_merge_files>"
    input_dir            : "/hdfs/store/user/aloeliger/ShuffledDeepBoostedTauInputs/complete_v2_0_0/"
    #input_spectrum       : "<path_to_shuffle_and_merge_spectrum>.root"
    input_spectrum       : "/scratch/DeepBoostedTauInput/finalSpectrumFile_v4.root"
    #target_spectrum      : "<path_to_shuffle_and_merge_spectrum>.root"
    target_spectrum      : "/scratch/DeepBoostedTauInput/finalSpectrumFile_v4.root"
    weight_thr           : 100000.0
    dataloader_core      : "TauMLTools/Training/interface/DataLoader_main.h"
    rm_inner_from_outer  : False
    input_type           : "ROOT" # supported 'ROOT' or 'tf'
    tf_input_dir         : "/eos/cms/store/group/phys_tau/TauML/prod_2018_v2/tf_datasets/emb_21k_99cut" # path to saved tf dataset
    tf_dataset_x_order   : ["TauFlat", "inner_egamma", "inner_muon", "inner_hadron", "outer_egamma", "outer_muon", "outer_hadron"] # specify order of layers in tf dataset

    # here define variables for the Histogram_2D class
    yaxis                : [
      20. , 30. , 40. , 50. , 60. , 70. , 80. , 90. , 100., 110.,
      120., 130., 140., 150., 160., 170., 180., 190., 200.,
      250., 300., 350., 400., 450., 500., 600., 700., 1000.
    ]
    xaxis_list           : [
      [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0, 2.1, 2.2, 2.3, 2.4, 2.5], #20-30
      [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0, 2.1, 2.2, 2.3, 2.4, 2.5], #30-40
      [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0, 2.1, 2.2, 2.3, 2.4, 2.5], #40-50
      [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0, 2.1, 2.2, 2.3, 2.4, 2.5], #50-60
      [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0, 2.1, 2.2, 2.3, 2.4, 2.5], #60-70
      [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0, 2.1, 2.2, 2.3, 2.4, 2.5], #70-80
      [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0, 2.1, 2.2, 2.3, 2.4, 2.5], #80-90
      [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0, 2.1, 2.2, 2.3, 2.4, 2.5], #90-100
      [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0, 2.1, 2.2, 2.3, 2.4, 2.5], #100-110
      [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0, 2.1, 2.2, 2.3, 2.4, 2.5], #110-120
      [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0, 2.1, 2.2, 2.3, 2.4, 2.5], #120-130
      [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0, 2.1, 2.2, 2.3, 2.4, 2.5], #130-140
      [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0, 2.1, 2.2, 2.3, 2.4, 2.5], #140-150
      [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0, 2.1, 2.2, 2.3, 2.4, 2.5], #150-160
      [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0, 2.1, 2.2, 2.3, 2.4, 2.5], #160-170
      [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0, 2.1, 2.2, 2.3, 2.4, 2.5], #170-180
      [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0, 2.1, 2.2, 2.3, 2.4, 2.5], #180-190
      [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0, 2.1, 2.2, 2.3, 2.4, 2.5], #190-200
      [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0, 2.1, 2.2, 2.3, 2.4, 2.5], #200-250
      [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0, 2.1, 2.2, 2.3, 2.4, 2.5], #250-300
      [0.0, 0.2, 0.4, 0.6, 0.8, 1.0, 1.2, 1.5, 1.8, 2.1, 2.5], #300-350
      [0.0, 0.2, 0.4, 0.6, 0.8, 1.0, 1.2, 1.5, 1.8, 2.1, 2.5], #350-400
      [0.0, 0.2, 0.4, 0.6, 0.8, 1.0, 1.2, 1.5, 1.8, 2.1, 2.5], #400-450
      [0.0, 0.2, 0.4, 0.6, 0.8, 1.0, 1.2, 1.5, 1.8, 2.1, 2.5], #450-500
      [0.0, 0.3, 0.6, 0.9, 1.2, 1.5, 1.8, 2.5], #500-600
      [0.0, 0.3, 0.6, 0.9, 1.2, 1.5, 1.8, 2.5], #600-700
      [0.0, 0.3, 0.6, 0.9, 1.2, 1.5, 1.8, 2.5], #700-1000
                            ]
    xmin                 : 0
    xmax                 : 2.5

SetupNN:
    model_name           : "DeepBoostedTau_v1_0_0"
    #n_batches            : 80000 #-1 for whole dataset
    n_batches            : 50000 #-1 for whole dataset
    #n_batches_val        : 80000 #-1 for whole datsset
    n_batches_val        : 10000 #-1 for whole datsset
    n_batches_log        : 1000 # monitor every n batches in tensorboard
    epoch                : 0
    n_epochs             : 20 #check increase of epochs for final training?
    validation_split     : 0.3
    max_queue_size       : 10
    n_load_workers       : 4
    input_grids          : [
                            [ GridGlobal, PfCand_electron, PfCand_gamma, Electron ], # e-gamma
                            [ GridGlobal, PfCand_muon, Muon ], # muons
                            [ GridGlobal, PfCand_chHad, PfCand_nHad ] # hadrons
                           ]
    TauLossesSFs         : [1, 2.5, 5, 1.5]
    optimizer_name       : "Nadam"
    learning_rate        : 0.001
    tau_net              : { "activation": "PReLU", "dropout_rate": 0.2, "reduction_rate": 1.4, "first_layer_width": "2*n*(1+drop)", "last_layer_width": "n*(1+drop)" }
    comp_net             : { "activation": "PReLU", "dropout_rate": 0.2, "reduction_rate": 1.6, "first_layer_width": "2*n*(1+drop)", "last_layer_width": "n*(1+drop)" }
    comp_merge_net       : { "activation": "PReLU", "dropout_rate": 0.2, "reduction_rate": 1.6, "first_layer_width": "n", "last_layer_width": 64 }
    conv_2d_net          : { "activation": "PReLU", "dropout_rate": 0.2, "reduction_rate": null, "window_size": 3 }
    dense_net            : { "activation": "PReLU", "dropout_rate": 0.2, "reduction_rate": 1, "first_layer_width": 200, "last_layer_width": 200, "min_n_layers": 4 }
    first_layer_reg      : null # eg "L1, reg_fact"
    active_features      : ['TauFlat', 'GridGlobal', 'PfCand_electron', 'PfCand_muon', 'PfCand_chHad', 'PfCand_nHad', 'PfCand_gamma', 'Electron', 'Muon']
    cell_locations       : ['inner', 'outer']

CellObjectType : [
                 GridGlobal,
                 PfCand_electron,
                 PfCand_muon,
                 PfCand_chHad,
                 PfCand_nHad,
                 PfCand_gamma,
                 Electron,
                 Muon
                 ]

Scaling_setup:
    # --------------------------------------------------------
    file_path: '/hdfs/store/user/aloeliger/ShuffledDeepBoostedTauInputs/complete_v2_0_0/*.root' # input files to be used for computation of scaling params
    output_json_folder: 'output_json' # directory where json files with scaling params will be stored
    file_range: [0, 100] # range of files in the sorted `file_path` to be processed, right endpoint excluded; -1 to run on all files from file_path
    tree_name: taus # TTree name in input files to be read
    log_step: 10 # will make a snapshot of scaling parameters per this number of input files
    version: 5 # string to be added to a json filename

    # --------------------------------------------------------
    # aliases for selection cuts
    selection:
      - &mpi -3.141592653589793
      - &pi 3.141592653589793
      # ----------------------------
      - &boostedTau_dxy_valid '(boostedTau_dxy > -10) & (boostedTau_dxy_error > 0)'
      - &boostedTau_dz_sig_valid 'boostedTau_dz_error > 0'
      - &boostedTau_ip3d_valid '(boostedTau_ip3d > - 10) & (boostedTau_ip3d_error > 0)'
      - &boostedTau_e_ratio_valid 'boostedTau_e_ratio > 0'
      - &boostedTau_gj_angle_diff_valid 'boostedTau_gj_angle_diff >= 0'
      # ----------------------------
      - &is_pfElectron 'pfCand_particleType == 2'
      - &is_pfElectron_hasTrackDetails '(pfCand_particleType == 2) & (pfCand_hasTrackDetails == 1)'
      - &is_pfElectron_hasTrackDetails_track_ndof '(pfCand_particleType == 2) & (pfCand_hasTrackDetails == 1) & (pfCand_track_ndof > 0)'
      # ----------------------------
      - &is_pfMuon 'pfCand_particleType == 3'
      - &is_pfMuon_hasTrackDetails '(pfCand_particleType == 3) & (pfCand_hasTrackDetails == 1)'
      - &is_pfMuon_hasTrackDetails_track_ndof '(pfCand_particleType == 3) & (pfCand_hasTrackDetails == 1) & (pfCand_track_ndof > 0)'
      # ----------------------------
      - &is_pfGamma 'pfCand_particleType == 4'
      - &is_pfGamma_hasTrackDetails '(pfCand_particleType == 4) & (pfCand_hasTrackDetails == 1)'
      - &is_pfGamma_hasTrackDetails_track_ndof '(pfCand_particleType == 4) & (pfCand_hasTrackDetails == 1) & (pfCand_track_ndof > 0)'
      # ----------------------------
      - &is_neutralHadron 'pfCand_particleType == 5'
      # ----------------------------
      - &is_chargedHadron 'pfCand_particleType == 1'
      - &is_chargedHadron_hasTrackDetails '(pfCand_particleType == 1) & (pfCand_hasTrackDetails == 1)'
      - &is_chargedHadron_hasTrackDetails_track_ndof '(pfCand_particleType == 1) & (pfCand_hasTrackDetails == 1) & (pfCand_track_ndof > 0)'
      # ----------------------------
      - &muon_normalizedChi2_valid 'muon_normalizedChi2 >= 0'
      - &muon_pfEcalEnergy_valid 'muon_pfEcalEnergy >= 0'
      # ----------------------------
      - &ele_has_closestCtfTrack 'ele_closestCtfTrack_normalizedChi2 >= 0'
      - &ele_cc_valid 'ele_cc_ele_energy >= 0'

    # --------------------------------------------------------
    # parameters for inner/outer tau cones' definition
    cone_definition:
      inner: # parameters for `dR_tau_signal_cone`
        min_pt: 30.
        min_radius: 0.05
        opening_coef: 3.
      outer:
        dR: 0.5 # `dR_tau_outer_cone`

    # --------------------------------------------------------
    # per feature types configuration for cone splitting
    cone_selection:
      TauFlat:
        var_names: # used to derive dR selection query
          pt: boostedTau_pt
          eta: boostedTau_eta
          phi: boostedTau_phi
        cone_types: [null] # [null] in case of no split into cones (i.e. inclusive computation)
      # ----------------------------
      GridGlobal:
        var_names: # used to derive dR selection query
          eta: tau_eta
          phi: tau_phi
        cone_types: [null] # [null] in case of no split into cones (i.e. inclusive computation)
      # ----------------------------
      PfCand_electron:
        var_names:
          eta: pfCand_eta
          phi: pfCand_phi
        cone_types: [inner, outer] # list of cone types for which to compute scaling params
      # ----------------------------
      PfCand_muon:
        var_names:
          eta: pfCand_eta
          phi: pfCand_phi
        cone_types: [inner, outer]
      # ----------------------------
      PfCand_chHad:
        var_names:
          eta: pfCand_eta
          phi: pfCand_phi
        cone_types: [inner, outer]
      # ----------------------------
      PfCand_nHad:
        var_names:
          eta: pfCand_eta
          phi: pfCand_phi
        cone_types: [inner, outer]
      # ----------------------------
      PfCand_gamma:
        var_names:
          eta: pfCand_eta
          phi: pfCand_phi
        cone_types: [inner, outer]
      # ----------------------------
      Electron:
        var_names:
          eta: ele_eta
          phi: ele_phi
        cone_types: [inner, outer]
      # ----------------------------
      Muon:
        var_names:
          eta: muon_eta
          phi: muon_phi
        cone_types: [inner, outer]
    # --------------------------------------------------------

##   Map of feature names to a list [selection, aliases, scaling_type, *lim_params] where:
##     - selection: string, cuts to be applied on-the-fly by uproot when loading data into awkward array
##     - aliases: dictionary, definitions of variables not present in original file and added on-the-fly by uproot when loading data.
##     - scaling_type: string, one of ["no scaling", "categorical", "linear", "normal"]
##     - lim_params: if passed, should be either a list of two numbers or a dictionary. See README for more details.
Features_all :
    TauFlat :
                - rho: [null, null, "linear", 0, 50]
                - boostedTau_pt: [null, null, "linear", 20, 1000]
                - boostedTau_eta: [null, null, "linear", -2.3, 2.3]
                - boostedTau_phi: [null, null, "linear", *mpi, *pi]
                - boostedTau_mass: [null, null, "normal", -5, 5]
                - boostedTau_E_over_pt: [null, {"boostedTau_E_over_pt": "sqrt((boostedTau_pt*cosh(boostedTau_eta))*(boostedTau_pt*cosh(boostedTau_eta)) + boostedTau_mass*boostedTau_mass)/boostedTau_pt"}, "normal", -5, 5]
                - boostedTau_charge: [null, null, "no_scaling"]
                - boostedTau_n_charged_prongs: [null, {"boostedTau_n_charged_prongs": "boostedTau_decayMode//5 + 1"}, "categorical"]
                - boostedTau_n_neutral_prongs: [null, {"boostedTau_n_neutral_prongs": "boostedTau_decayMode%5"}, "categorical"]
                - boostedTau_chargedIsoPtSum: [null, null, "normal", -5, 5]
                - boostedTau_chargedIsoPtSumdR03_over_dR05: [null, {"boostedTau_chargedIsoPtSumdR03_over_dR05": "boostedTau_chargedIsoPtSumdR03/boostedTau_chargedIsoPtSum"}, "no_scaling"]
                - boostedTau_footprintCorrection: [null, null, "normal", -5, 5]
                - boostedTau_neutralIsoPtSum: [null, null, "normal", -5, 5]
                - boostedTau_neutralIsoPtSumWeight_over_neutralIsoPtSum: [null, {"boostedTau_neutralIsoPtSumWeight_over_neutralIsoPtSum": "boostedTau_neutralIsoPtSumWeight/boostedTau_neutralIsoPtSum"}, "no_scaling"]
                - boostedTau_neutralIsoPtSumWeightdR03_over_neutralIsoPtSum: [null, {"boostedTau_neutralIsoPtSumWeightdR03_over_neutralIsoPtSum": "boostedTau_neutralIsoPtSumWeightdR03/boostedTau_neutralIsoPtSum"}, "no_scaling"]
                - boostedTau_neutralIsoPtSumdR03_over_dR05: [null, {"boostedTau_neutralIsoPtSumdR03_over_dR05": "boostedTau_neutralIsoPtSumdR03/boostedTau_neutralIsoPtSum"}, "no_scaling"]
                - boostedTau_photonPtSumOutsideSignalCone: [null, null, "normal", -5, 5]
                - boostedTau_puCorrPtSum: [null, null, "normal", -5, 5]
                - boostedTau_dxy_valid: [null, {"boostedTau_dxy_valid": *boostedTau_dxy_valid}, "no_scaling"]
                - boostedTau_dxy: [*boostedTau_dxy_valid, null, "normal", -5, 5]
                - boostedTau_dxy_sig: [*boostedTau_dxy_valid, {"boostedTau_dxy_sig": "abs(boostedTau_dxy)/boostedTau_dxy_error"}, "normal", -5, 5]
                - boostedTau_ip3d_valid: [null, {"boostedTau_ip3d_valid": *boostedTau_ip3d_valid}, "no_scaling"]
                - boostedTau_ip3d: [*boostedTau_ip3d_valid, null, "normal", -5, 5]
                - boostedTau_ip3d_sig: [*boostedTau_ip3d_valid, {"boostedTau_ip3d_sig": "abs(boostedTau_ip3d)/boostedTau_ip3d_error"}, "normal", -5, 5]
                - boostedTau_dz: [null, null, "normal", -5, 5]
                - boostedTau_dz_sig_valid: [null, {"boostedTau_dz_sig_valid": *boostedTau_dz_sig_valid}, "no_scaling"]
                - boostedTau_dz_sig: [*boostedTau_dz_sig_valid, {"boostedTau_dz_sig": "abs(boostedTau_dz)/boostedTau_dz_error"}, "normal", -5, 5]
                - boostedTau_flightLength_x: [null, null, "normal", -5, 5]
                - boostedTau_flightLength_y: [null, null, "normal", -5, 5]
                - boostedTau_flightLength_z: [null, null, "normal", -5, 5]
                - boostedTau_flightLength_sig: [null, null, "normal", -5, 5]
                - boostedTau_pt_weighted_deta_strip: [null, null, "linear", 0., 1.]
                - boostedTau_pt_weighted_dphi_strip: [null, null, "linear", 0., 1.]
                - boostedTau_pt_weighted_dr_signal: [null, null, "normal", -5, 5]
                - boostedTau_pt_weighted_dr_iso: [null, null, "linear", 0., 1.]
                - boostedTau_leadingTrackNormChi2: [null, null, "normal", -5, 5]
                - boostedTau_e_ratio_valid: [null, {"boostedTau_e_ratio_valid": *boostedTau_e_ratio_valid}, "no_scaling"]
                - boostedTau_e_ratio: [*boostedTau_e_ratio_valid, null, "linear", 0., 1.]
                - boostedTau_gj_angle_diff_valid: [null, {"boostedTau_gj_angle_diff_valid": *boostedTau_gj_angle_diff_valid}, "no_scaling"]
                - boostedTau_gj_angle_diff: [*boostedTau_gj_angle_diff_valid, null, "linear", 0., *pi]
                - boostedTau_n_photons: [null, null, "normal", -5, 5]
                - boostedTau_emFraction: [null, null, "linear", -1., 1.]
                - boostedTau_inside_ecal_crack: [null, null, "no_scaling"]
                - boostedTau_leadChargedCand_etaAtEcalEntrance_minus_tau_eta: [null, {"boostedTau_leadChargedCand_etaAtEcalEntrance_minus_tau_eta": "boostedTau_leadChargedCand_etaAtEcalEntrance - boostedTau_eta"}, "normal", -5, 5]

    GridGlobal:
                - rho: [null, null, "linear", 0, 50]
                - boostedTau_pt: [null, null, "linear", 20, 1000]
                - boostedTau_eta: [null, null, "linear", -2.3, 2.3]
                - boostedTau_inside_ecal_crack: [null, null, "no_scaling"]

    PfCand_electron :
                - pfCand_ele_valid: [*is_pfElectron, null, "no_scaling"]
                - pfCand_ele_rel_pt: [*is_pfElectron, {"pfCand_ele_rel_pt": "pfCand_pt/boostedTau_pt"}, "normal", -5, 5]
                - pfCand_ele_deta: [*is_pfElectron, {"pfCand_ele_deta": "pfCand_eta - boostedTau_eta"}, "linear", {'inner': [-0.1, 0.1], 'outer': [-0.5, 0.5]}]
                - pfCand_ele_dphi: [*is_pfElectron, {"pfCand_ele_dphi": "pfCand_phi - boostedTau_eta"}, "linear", {'inner': [-0.1, 0.1], 'outer': [-0.5, 0.5]}] # NB: will not bring dphi values to [-pi,pi] on the fly here
                - pfCand_ele_pvAssociationQuality: [*is_pfElectron, {"pfCand_ele_pvAssociationQuality": "pfCand_pvAssociationQuality"}, "categorical"]
                - pfCand_ele_puppiWeight: [*is_pfElectron, {"pfCand_ele_puppiWeight": "pfCand_puppiWeight"}, "no_scaling"]
                - pfCand_ele_charge: [*is_pfElectron, {"pfCand_ele_charge": "pfCand_charge"}, "no_scaling"]
                - pfCand_ele_lostInnerHits: [*is_pfElectron, {"pfCand_ele_lostInnerHits": "pfCand_lostInnerHits"}, "categorical"]
                - pfCand_ele_nPixelHits: [*is_pfElectron, {"pfCand_ele_nPixelHits": "pfCand_nPixelHits"}, "linear", 0, 10]
                - pfCand_ele_vertex_dx: [*is_pfElectron, {"pfCand_ele_vertex_dx": "pfCand_vertex_x-pv_x"}, "normal", -5, 5]
                - pfCand_ele_vertex_dy: [*is_pfElectron, {"pfCand_ele_vertex_dy": "pfCand_vertex_y-pv_y"}, "normal", -5, 5]
                - pfCand_ele_vertex_dz: [*is_pfElectron, {"pfCand_ele_vertex_dz": "pfCand_vertex_z-pv_z"}, "normal", -5, 5]
                - pfCand_ele_vertex_dx_tauFL: [*is_pfElectron, {"pfCand_ele_vertex_dx_tauFL": "pfCand_vertex_x-pv_x-boostedTau_flightLength_x"}, "normal", -5, 5]
                - pfCand_ele_vertex_dy_tauFL: [*is_pfElectron, {"pfCand_ele_vertex_dy_tauFL": "pfCand_vertex_y-pv_y-boostedTau_flightLength_y"}, "normal", -5, 5]
                - pfCand_ele_vertex_dz_tauFL: [*is_pfElectron, {"pfCand_ele_vertex_dz_tauFL": "pfCand_vertex_z-pv_z-boostedTau_flightLength_z"}, "normal", -5, 5]
                - pfCand_ele_hasTrackDetails: [*is_pfElectron, {"pfCand_ele_hasTrackDetails": "pfCand_hasTrackDetails==1"}, "no_scaling"]
                - pfCand_ele_dxy: [*is_pfElectron_hasTrackDetails, {"pfCand_ele_dxy": "pfCand_dxy"}, "normal", -5, 5]
                - pfCand_ele_dxy_sig: [*is_pfElectron_hasTrackDetails, {"pfCand_ele_dxy_sig": "abs(pfCand_dxy)/pfCand_dxy_error"}, "normal", -5, 5]
                - pfCand_ele_dz: [*is_pfElectron_hasTrackDetails, {"pfCand_ele_dz": "pfCand_dz"}, "normal", -5, 5]
                - pfCand_ele_dz_sig: [*is_pfElectron_hasTrackDetails, {"pfCand_ele_dz_sig": "abs(pfCand_dz)/pfCand_dz_error"}, "normal", -5, 5]
                - pfCand_ele_track_chi2_ndof: [*is_pfElectron_hasTrackDetails_track_ndof, {"pfCand_ele_track_chi2_ndof": "pfCand_track_chi2/pfCand_track_ndof"}, "normal", -5, 5]
                - pfCand_ele_track_ndof: [*is_pfElectron_hasTrackDetails_track_ndof, {"pfCand_ele_track_ndof": "pfCand_track_ndof"}, "normal", -5, 5]

    PfCand_muon :
              - pfCand_muon_valid: [*is_pfMuon, null, "no_scaling"]
              - pfCand_muon_rel_pt: [*is_pfMuon, {"pfCand_muon_rel_pt": "pfCand_pt/boostedTau_pt"}, "normal", -5, 5]
              - pfCand_muon_deta: [*is_pfMuon, {"pfCand_muon_deta": "pfCand_eta - boostedTau_eta"}, "linear", {'inner': [-0.1, 0.1], 'outer': [-0.5, 0.5]}]
              - pfCand_muon_dphi: [*is_pfMuon, {"pfCand_muon_dphi": "pfCand_phi - boostedTau_eta"}, "linear", {'inner': [-0.1, 0.1], 'outer': [-0.5, 0.5]}] # NB: will not bring dphi values to [-pi,pi] on the fly here
              - pfCand_muon_pvAssociationQuality: [*is_pfMuon, {"pfCand_muon_pvAssociationQuality": "pfCand_pvAssociationQuality"}, "categorical"]
              - pfCand_muon_fromPV: [*is_pfMuon, {"pfCand_muon_fromPV": "pfCand_fromPV"}, "categorical"]
              - pfCand_muon_puppiWeight: [*is_pfMuon, {"pfCand_muon_puppiWeight": "pfCand_puppiWeight"}, "no_scaling"]
              - pfCand_muon_charge: [*is_pfMuon, {"pfCand_muon_charge": "pfCand_charge"}, "no_scaling"]
              - pfCand_muon_lostInnerHits: [*is_pfMuon, {"pfCand_muon_lostInnerHits": "pfCand_lostInnerHits"}, "categorical"]
              - pfCand_muon_nPixelHits: [*is_pfMuon, {"pfCand_muon_nPixelHits": "pfCand_nPixelHits"}, "linear", 0, 11]
              - pfCand_muon_vertex_dx: [*is_pfMuon, {"pfCand_muon_vertex_dx": "pfCand_vertex_x-pv_x"}, "normal", -5, 5]
              - pfCand_muon_vertex_dy: [*is_pfMuon, {"pfCand_muon_vertex_dy": "pfCand_vertex_y-pv_y"}, "normal", -5, 5]
              - pfCand_muon_vertex_dz: [*is_pfMuon, {"pfCand_muon_vertex_dz": "pfCand_vertex_z-pv_z"}, "normal", -5, 5]
              - pfCand_muon_vertex_dx_tauFL: [*is_pfMuon, {"pfCand_muon_vertex_dx_tauFL": "pfCand_vertex_x-pv_x-boostedTau_flightLength_x"}, "normal", -5, 5]
              - pfCand_muon_vertex_dy_tauFL: [*is_pfMuon, {"pfCand_muon_vertex_dy_tauFL": "pfCand_vertex_y-pv_y-boostedTau_flightLength_y"}, "normal", -5, 5]
              - pfCand_muon_vertex_dz_tauFL: [*is_pfMuon, {"pfCand_muon_vertex_dz_tauFL": "pfCand_vertex_z-pv_z-boostedTau_flightLength_z"}, "normal", -5, 5]
              - pfCand_muon_hasTrackDetails: [*is_pfMuon, {"pfCand_muon_hasTrackDetails": "pfCand_hasTrackDetails==1"}, "no_scaling"]
              - pfCand_muon_dxy: [*is_pfMuon_hasTrackDetails, {"pfCand_muon_dxy": "pfCand_dxy"}, "normal", -5, 5]
              - pfCand_muon_dxy_sig: [*is_pfMuon_hasTrackDetails, {"pfCand_muon_dxy_sig": "abs(pfCand_dxy)/pfCand_dxy_error"}, "normal", -5, 5]
              - pfCand_muon_dz: [*is_pfMuon_hasTrackDetails, {"pfCand_muon_dz": "pfCand_dz"}, "normal", -5, 5]
              - pfCand_muon_dz_sig: [*is_pfMuon_hasTrackDetails, {"pfCand_muon_dz_sig": "abs(pfCand_dz)/pfCand_dz_error"}, "normal", -5, 5]
              - pfCand_muon_track_chi2_ndof: [*is_pfMuon_hasTrackDetails_track_ndof, {"pfCand_muon_track_chi2_ndof": "pfCand_track_chi2/pfCand_track_ndof"}, "normal", -5, 5]
              - pfCand_muon_track_ndof: [*is_pfMuon_hasTrackDetails_track_ndof, {"pfCand_muon_track_ndof": "pfCand_track_ndof"}, "normal", -5, 5]

    PfCand_chHad :
              - pfCand_chHad_valid: [*is_chargedHadron, null, "no_scaling"]
              - pfCand_chHad_rel_pt: [*is_chargedHadron, {"pfCand_chHad_rel_pt": "pfCand_pt/boostedTau_pt"}, "normal", -5, 5]
              - pfCand_chHad_deta: [*is_chargedHadron, {"pfCand_chHad_deta": "pfCand_eta - boostedTau_eta"}, "linear", {'inner': [-0.1, 0.1], 'outer': [-0.5, 0.5]}]
              - pfCand_chHad_dphi: [*is_chargedHadron, {"pfCand_chHad_dphi": "pfCand_phi - boostedTau_eta"}, "linear", {'inner': [-0.1, 0.1], 'outer': [-0.5, 0.5]}] # NB: will not bring dphi values to [-pi,pi] on the fly here
              - pfCand_chHad_tauLeadChargedHadrCand: [*is_chargedHadron, {"pfCand_chHad_tauLeadChargedHadrCand": "pfCand_tauLeadChargedHadrCand"}, "no_scaling"]
              - pfCand_chHad_pvAssociationQuality: [*is_chargedHadron, {"pfCand_chHad_pvAssociationQuality": "pfCand_pvAssociationQuality"}, "categorical"]
              - pfCand_chHad_fromPV: [*is_chargedHadron, {"pfCand_chHad_fromPV": "pfCand_fromPV"}, "categorical"]
              - pfCand_chHad_puppiWeight: [*is_chargedHadron, {"pfCand_chHad_puppiWeight": "pfCand_puppiWeight"}, "no_scaling"]
              - pfCand_chHad_puppiWeightNoLep: [*is_chargedHadron, {"pfCand_chHad_puppiWeightNoLep": "pfCand_puppiWeightNoLep"}, "no_scaling"]
              - pfCand_chHad_charge: [*is_chargedHadron, {"pfCand_chHad_charge": "pfCand_charge"}, "no_scaling"]
              - pfCand_chHad_lostInnerHits: [*is_chargedHadron, {"pfCand_chHad_lostInnerHits": "pfCand_lostInnerHits"}, "categorical"]
              - pfCand_chHad_nPixelHits: [*is_chargedHadron, {"pfCand_chHad_nPixelHits": "pfCand_nPixelHits"}, "linear", 0, 12]
              - pfCand_chHad_vertex_dx: [*is_chargedHadron, {"pfCand_chHad_vertex_dx": "pfCand_vertex_x - pv_x"}, "normal", -5, 5]
              - pfCand_chHad_vertex_dy: [*is_chargedHadron, {"pfCand_chHad_vertex_dy": "pfCand_vertex_y - pv_y"}, "normal", -5, 5]
              - pfCand_chHad_vertex_dz: [*is_chargedHadron, {"pfCand_chHad_vertex_dz": "pfCand_vertex_z - pv_z"}, "normal", -5, 5]
              - pfCand_chHad_vertex_dx_tauFL: [*is_chargedHadron, {"pfCand_chHad_vertex_dx_tauFL": "pfCand_vertex_x - pv_x - boostedTau_flightLength_x"}, "normal", -5, 5]
              - pfCand_chHad_vertex_dy_tauFL: [*is_chargedHadron, {"pfCand_chHad_vertex_dy_tauFL": "pfCand_vertex_y - pv_y - boostedTau_flightLength_y"}, "normal", -5, 5]
              - pfCand_chHad_vertex_dz_tauFL: [*is_chargedHadron, {"pfCand_chHad_vertex_dz_tauFL": "pfCand_vertex_z - pv_z - boostedTau_flightLength_z"}, "normal", -5, 5]
              - pfCand_chHad_hasTrackDetails: [*is_chargedHadron, {"pfCand_chHad_hasTrackDetails": "pfCand_hasTrackDetails==1"}, "no_scaling"]
              - pfCand_chHad_dxy: [*is_chargedHadron_hasTrackDetails, {"pfCand_chHad_dxy": "pfCand_dxy"}, "normal", -5, 5]
              - pfCand_chHad_dxy_sig: [*is_chargedHadron_hasTrackDetails, {"pfCand_chHad_dxy_sig": "abs(pfCand_dxy)/pfCand_dxy_error"}, "normal", -5, 5]
              - pfCand_chHad_dz: [*is_chargedHadron_hasTrackDetails, {"pfCand_chHad_dz": "pfCand_dz"}, "normal", -5, 5]
              - pfCand_chHad_dz_sig: [*is_chargedHadron_hasTrackDetails, {"pfCand_chHad_dz_sig": "abs(pfCand_dz)/pfCand_dz_error"}, "normal", -5, 5]
              - pfCand_chHad_track_chi2_ndof: [*is_chargedHadron_hasTrackDetails_track_ndof, {"pfCand_chHad_track_chi2_ndof": "pfCand_track_chi2/pfCand_track_ndof"}, "normal", -5, 5]
              - pfCand_chHad_track_ndof: [*is_chargedHadron_hasTrackDetails_track_ndof, {"pfCand_chHad_track_ndof": "pfCand_track_ndof"}, "normal", -5, 5]
              - pfCand_chHad_hcalFraction: [*is_chargedHadron, {"pfCand_chHad_hcalFraction": "pfCand_hcalFraction"}, "no_scaling"]
              - pfCand_chHad_rawCaloFraction: [*is_chargedHadron, {"pfCand_chHad_rawCaloFraction": "pfCand_rawCaloFraction"}, "linear", 0., 2.6]

    PfCand_nHad :
              - pfCand_nHad_valid: [*is_neutralHadron, null, "no_scaling"]
              - pfCand_nHad_rel_pt: [*is_neutralHadron, {"pfCand_nHad_rel_pt": "pfCand_pt/boostedTau_pt"}, "normal", -5, 5]
              - pfCand_nHad_deta: [*is_neutralHadron, {"pfCand_nHad_deta": "pfCand_eta - boostedTau_eta"}, "linear", {'inner': [-0.1, 0.1], 'outer': [-0.5, 0.5]}]
              - pfCand_nHad_dphi: [*is_neutralHadron, {"pfCand_nHad_dphi": "pfCand_phi - boostedTau_eta"}, "linear", {'inner': [-0.1, 0.1], 'outer': [-0.5, 0.5]}] # NB: will not bring dphi values to [-pi,pi] on the fly here
              - pfCand_nHad_puppiWeight: [*is_neutralHadron, {"pfCand_nHad_puppiWeight": pfCand_puppiWeight}, "no_scaling"]
              - pfCand_nHad_puppiWeightNoLep: [*is_neutralHadron, {"pfCand_nHad_puppiWeightNoLep": pfCand_puppiWeightNoLep}, "no_scaling"]
              - pfCand_nHad_hcalFraction: [*is_neutralHadron, {"pfCand_nHad_hcalFraction": "pfCand_hcalFraction"}, "no_scaling"]

    PfCand_gamma :
              - pfCand_gamma_valid: [*is_pfGamma, null, "no_scaling"]
              - pfCand_gamma_rel_pt: [*is_pfGamma, {"pfCand_gamma_rel_pt": "pfCand_pt/boostedTau_pt"}, "normal", -5, 5]
              - pfCand_gamma_deta: [*is_pfGamma, {"pfCand_gamma_deta": "pfCand_eta - boostedTau_eta"}, "linear", {'inner': [-0.1, 0.1], 'outer': [-0.5, 0.5]}]
              - pfCand_gamma_dphi: [*is_pfGamma, {"pfCand_gamma_dphi": "pfCand_phi - boostedTau_eta"}, "linear", {'inner': [-0.1, 0.1], 'outer': [-0.5, 0.5]}] # NB: will not bring dphi values to [-pi,pi] on the fly here
              - pfCand_gamma_pvAssociationQuality: [*is_pfGamma, {"pfCand_gamma_pvAssociationQuality": "pfCand_pvAssociationQuality"}, "categorical"]
              - pfCand_gamma_fromPV: [*is_pfGamma, {"pfCand_gamma_fromPV": "pfCand_fromPV"}, "categorical"]
              - pfCand_gamma_puppiWeight: [*is_pfGamma, {"pfCand_gamma_puppiWeight": "pfCand_puppiWeight"}, "no_scaling"]
              - pfCand_gamma_puppiWeightNoLep: [*is_pfGamma, {"pfCand_gamma_puppiWeightNoLep": "pfCand_puppiWeightNoLep"}, "no_scaling"]
              - pfCand_gamma_lostInnerHits: [*is_pfGamma, {"pfCand_gamma_lostInnerHits": "pfCand_lostInnerHits"}, "categorical"]
              - pfCand_gamma_nPixelHits: [*is_pfGamma, {"pfCand_gamma_nPixelHits": "pfCand_nPixelHits"}, "linear", 0, 7]
              - pfCand_gamma_vertex_dx: [*is_pfGamma, {"pfCand_gamma_vertex_dx": "pfCand_vertex_x - pv_x"}, "normal", -5, 5]
              - pfCand_gamma_vertex_dy: [*is_pfGamma, {"pfCand_gamma_vertex_dy": "pfCand_vertex_y - pv_y"}, "normal", -5, 5]
              - pfCand_gamma_vertex_dz: [*is_pfGamma, {"pfCand_gamma_vertex_dz": "pfCand_vertex_z - pv_z"}, "normal", -5, 5]
              - pfCand_gamma_vertex_dx_tauFL: [*is_pfGamma, {"pfCand_gamma_vertex_dx_tauFL": "pfCand_vertex_x - pv_x - boostedTau_flightLength_x"}, "normal", -5, 5]
              - pfCand_gamma_vertex_dy_tauFL: [*is_pfGamma, {"pfCand_gamma_vertex_dy_tauFL": "pfCand_vertex_y - pv_y - boostedTau_flightLength_y"}, "normal", -5, 5]
              - pfCand_gamma_vertex_dz_tauFL: [*is_pfGamma, {"pfCand_gamma_vertex_dz_tauFL": "pfCand_vertex_z - pv_z - boostedTau_flightLength_z"}, "normal", -5, 5]
              - pfCand_gamma_hasTrackDetails: [*is_pfGamma, {"pfCand_gamma_hasTrackDetails": "pfCand_hasTrackDetails==1"}, "no_scaling"]
              - pfCand_gamma_dxy: [*is_pfGamma_hasTrackDetails, {"pfCand_gamma_dxy": "pfCand_dxy"}, "normal", -5, 5]
              - pfCand_gamma_dxy_sig: [*is_pfGamma_hasTrackDetails, {"pfCand_gamma_dxy_sig": "abs(pfCand_dxy)/pfCand_dxy_error"}, "normal", -5, 5]
              - pfCand_gamma_dz: [*is_pfGamma_hasTrackDetails, {"pfCand_gamma_dz": "pfCand_dz"}, "normal", -5, 5]
              - pfCand_gamma_dz_sig: [*is_pfGamma_hasTrackDetails, {"pfCand_gamma_dz_sig": "abs(pfCand_dz)/pfCand_dz_error"}, "normal", -5, 5]
              - pfCand_gamma_track_chi2_ndof: [*is_pfGamma_hasTrackDetails_track_ndof, {"pfCand_gamma_track_chi2_ndof": "pfCand_track_chi2/pfCand_track_ndof"}, "normal", -5, 5]
              - pfCand_gamma_track_ndof: [*is_pfGamma_hasTrackDetails_track_ndof, {"pfCand_gamma_track_ndof": "pfCand_track_ndof"}, "normal", -5, 5]

    Electron :
              - ele_valid: [null, null, "no_scaling"]
              - ele_rel_pt: [null, {"ele_rel_pt": "ele_pt/boostedTau_pt"}, "normal", -5, 5]
              - ele_deta: [null, {"ele_deta": "ele_eta - boostedTau_eta"}, "linear", {'inner': [-0.1, 0.1], 'outer': [-0.5, 0.5]}]
              - ele_dphi: [null, {"ele_dphi": "ele_phi - boostedTau_eta"}, "linear", {'inner': [-0.1, 0.1], 'outer': [-0.5, 0.5]}] # NB: will not bring dphi values to [-pi,pi] on the fly here
              - ele_cc_valid: [null, {"ele_cc_valid": *ele_cc_valid}, "no_scaling"]
              - ele_cc_ele_rel_energy: [*ele_cc_valid, {"ele_cc_ele_rel_energy": "ele_cc_ele_energy/ele_pt"}, "normal", -5, 5]
              - ele_cc_gamma_rel_energy: [*ele_cc_valid, {"ele_cc_gamma_rel_energy": "ele_cc_gamma_energy/ele_cc_ele_energy"}, "normal", -5, 5]
              - ele_cc_n_gamma: [*ele_cc_valid, null, "normal", -5, 5]
              - ele_rel_trackMomentumAtVtx: [null, {"ele_rel_trackMomentumAtVtx": "ele_trackMomentumAtVtx/ele_pt"}, "normal", -5, 5]
              - ele_rel_trackMomentumAtCalo: [null, {"ele_rel_trackMomentumAtCalo": "ele_trackMomentumAtCalo/ele_pt"}, "normal", -5, 5]
              - ele_rel_trackMomentumOut: [null, {"ele_rel_trackMomentumOut": "ele_trackMomentumOut/ele_pt"}, "normal", -5, 5]
              - ele_rel_trackMomentumAtEleClus: [null, {"ele_rel_trackMomentumAtEleClus": "ele_trackMomentumAtEleClus/ele_pt"}, "normal", -5, 5]
              - ele_rel_trackMomentumAtVtxWithConstraint: [null, {"ele_rel_trackMomentumAtVtxWithConstraint": "ele_trackMomentumAtVtxWithConstraint/ele_pt"}, "normal", -5, 5]
              - ele_rel_ecalEnergy: [null, {"ele_rel_ecalEnergy": "ele_ecalEnergy/ele_pt"}, "normal", -5, 5]
              - ele_ecalEnergy_sig: [null, {"ele_ecalEnergy_sig": "ele_ecalEnergy/ele_ecalEnergy_error"}, "normal", -5, 5]
              - ele_eSuperClusterOverP: [null, null, "normal", -5, 5]
              - ele_eSeedClusterOverP: [null, null, "normal", -5, 5]
              - ele_eSeedClusterOverPout: [null, null, "normal", -5, 5]
              - ele_eEleClusterOverPout: [null, null, "normal", -5, 5]
              - ele_deltaEtaSuperClusterTrackAtVtx: [null, null, "normal", -5, 5]
              - ele_deltaEtaSeedClusterTrackAtCalo: [null, null, "normal", -5, 5]
              - ele_deltaEtaEleClusterTrackAtCalo: [null, null, "normal", -5, 5]
              - ele_deltaPhiEleClusterTrackAtCalo: [null, null, "normal", -5, 5]
              - ele_deltaPhiSuperClusterTrackAtVtx: [null, null, "normal", -5, 5]
              - ele_deltaPhiSeedClusterTrackAtCalo: [null, null, "normal", -5, 5]
              - ele_mvaInput_earlyBrem: [null, null, "categorical"]
              - ele_mvaInput_lateBrem: [null, null, "categorical"]
              - ele_mvaInput_sigmaEtaEta: [null, null, "normal", -5, 5]
              - ele_mvaInput_hadEnergy: [null, null, "normal", -5, 5]
              - ele_mvaInput_deltaEta: [null, null, "normal", -5, 5]
              - ele_gsfTrack_normalizedChi2: [null, null, "normal", -5, 5]
              - ele_gsfTrack_numberOfValidHits: [null, null, "normal", -5, 5]
              - ele_rel_gsfTrack_pt: [null, {"ele_rel_gsfTrack_pt": "ele_gsfTrack_pt/ele_pt"}, "normal", -5, 5]
              - ele_gsfTrack_pt_sig: [null, {"ele_gsfTrack_pt_sig": "ele_gsfTrack_pt/ele_gsfTrack_pt_error"}, "normal", -5, 5]
              - ele_has_closestCtfTrack: [null, {"ele_has_closestCtfTrack": *ele_has_closestCtfTrack}, "no_scaling"]
              - ele_closestCtfTrack_normalizedChi2: [*ele_has_closestCtfTrack, null, "normal", -5, 5]
              - ele_closestCtfTrack_numberOfValidHits: [*ele_has_closestCtfTrack, null, "normal", -5, 5]

    Muon :
              - muon_valid: [null, null, "no_scaling"]
              - muon_rel_pt: [null, {"muon_rel_pt": "muon_pt/boostedTau_pt"}, "normal", -5, 5]
              - muon_deta: [null, {"muon_deta": "muon_eta - boostedTau_eta"}, "linear", {'inner': [-0.1, 0.1], 'outer': [-0.5, 0.5]}]
              - muon_dphi: [null, {"muon_dphi": "muon_phi - boostedTau_eta"}, "linear", {'inner': [-0.1, 0.1], 'outer': [-0.5, 0.5]}] # NB: will not bring dphi values to [-pi,pi] on the fly here
              - muon_dxy: [null, null, "normal", -5, 5]
              - muon_dxy_sig: [null, {"muon_dxy_sig": "abs(muon_dxy)/muon_dxy_error"}, "normal", -5, 5]
              - muon_normalizedChi2_valid: [null, {"muon_normalizedChi2_valid": *muon_normalizedChi2_valid}, "no_scaling"]
              - muon_normalizedChi2: [*muon_normalizedChi2_valid, null, "normal", -500, 500]
              - muon_numberOfValidHits: [*muon_normalizedChi2_valid, null, "normal", -5, 5]
              - muon_segmentCompatibility: [null, null, "no_scaling"]
              - muon_caloCompatibility: [null, null, "no_scaling"]
              - muon_pfEcalEnergy_valid: [null, {"muon_pfEcalEnergy_valid": *muon_pfEcalEnergy_valid}, "no_scaling"]
              - muon_rel_pfEcalEnergy: [*muon_pfEcalEnergy_valid, {"muon_rel_pfEcalEnergy": "muon_pfEcalEnergy/muon_pt"}, "normal", -5, 5]
              - muon_n_matches_DT_1: [null, null, "linear", 0., 2.]
              - muon_n_matches_DT_2: [null, null, "linear", 0., 2.]
              - muon_n_matches_DT_3: [null, null, "linear", 0., 2.]
              - muon_n_matches_DT_4: [null, null, "linear", 0., 2.]
              - muon_n_matches_CSC_1: [null, null, "linear", 0., 6.]
              - muon_n_matches_CSC_2: [null, null, "linear", 0., 2.]
              - muon_n_matches_CSC_3: [null, null, "linear", 0., 2.]
              - muon_n_matches_CSC_4: [null, null, "linear", 0., 2.]
              - muon_n_matches_RPC_1: [null, null, "linear", 0., 7.]
              - muon_n_matches_RPC_2: [null, null, "linear", 0., 6.]
              - muon_n_matches_RPC_3: [null, null, "linear", 0., 4.]
              - muon_n_matches_RPC_4: [null, null, "linear", 0., 4.]
              - muon_n_hits_DT_1: [null, null, "linear", 0., 12.]
              - muon_n_hits_DT_2: [null, null, "linear", 0., 12.]
              - muon_n_hits_DT_3: [null, null, "linear", 0., 12.]
              - muon_n_hits_DT_4: [null, null, "linear", 0., 8.]
              - muon_n_hits_CSC_1: [null, null, "linear", 0., 24.]
              - muon_n_hits_CSC_2: [null, null, "linear", 0., 12.]
              - muon_n_hits_CSC_3: [null, null, "linear", 0., 12.]
              - muon_n_hits_CSC_4: [null, null, "linear", 0., 12.]
              - muon_n_hits_RPC_1: [null, null, "linear", 0., 4.]
              - muon_n_hits_RPC_2: [null, null, "linear", 0., 4.]
              - muon_n_hits_RPC_3: [null, null, "linear", 0., 2.]
              - muon_n_hits_RPC_4: [null, null, "linear", 0., 2.]

Features_disable :
    TauFlat : ["boostedTau_phi"]
    GridGlobal : []
    PfCand_electron : [ ]
    PfCand_muon : [ ]
    PfCand_chHad : [ ]
    PfCand_nHad : [ ]
    PfCand_gamma : ["pfCand_gamma_dxy", "pfCand_gamma_dxy_sig", "pfCand_gamma_dz", "pfCand_gamma_dz_sig", "pfCand_gamma_track_chi2_ndof", "pfCand_gamma_track_ndof"]
    Electron : [ ]
    Muon : ["muon_normalizedChi2"]
